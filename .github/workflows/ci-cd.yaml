name: CI/CD Pipeline

env:
  IMAGE_NAME:  ghcr.io/jtarang/kubi-cicd-integration

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Install dependencies
        run: |
          poetry install
          poetry run pylint kubi_cicd_integration/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run pytest

  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref_name == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actior }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Git commit hash and short tag
        id: version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

      - name: Build Docker image with docker compose
        run: |
          docker compose build

      - name: Tag Docker image with commit hash and latest
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          echo "Tagged image with: ${{ env.IMAGE_NAME }}:latest and ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}"

      - name: Push both Docker image tags
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
